AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: Zoom Webhook to Splunk HTTP Event Collector (HEC)
Parameters:
  ParamZoomSignature:
    Type: String
    Description: "Zoom Webhook Verification Token"
  ParamSplunkHECURL:
    Type: String
    Description: "Splunk HTTP Event Collector (HEC) URL (e.g.: https://your.server.com)"
  ParamSplunkHECPort:
    Type: String
    Default: 443
    Description: "Splunk HTTP Event Collector (HEC) Port (e.g.: 443)"
  ParamSplunkHECToken:
    Type: String
    Description: "Splunk HTTP Event Collector (HEC) Token (e.g.: 12345678-1234-1234-1234-123456789012)"
  ParamSplunkIndex:
    Type: String
    Default: zoom
    Description: "Splunk Index (e.g.: zoom)"
Resources:
  ZoomWebhookApiGateway:
    Type: 'AWS::ApiGateway::RestApi'
    Properties:
      Name: Zoom-Webhook-API
  ZoomWebhookApiStage:
    Type: 'AWS::ApiGateway::Stage'
    Properties:
      DeploymentId: !Ref ZoomWebhookApiDeployment
      RestApiId: !Ref ZoomWebhookApiGateway
      StageName: Prod
  ZoomWebhookApiDeployment:
    Type: 'AWS::ApiGateway::Deployment'
    DependsOn:
      - ZoomWebhookApiMethod
    Properties:
      RestApiId: !Ref ZoomWebhookApiGateway
  ZoomWebhookApiResource:
    Type: 'AWS::ApiGateway::Resource'
    Properties:
      RestApiId: !Ref ZoomWebhookApiGateway
      ParentId: !GetAtt ZoomWebhookApiGateway.RootResourceId
      PathPart: zoom-to-hec
  ZoomWebhookApiMethod:
    Type: 'AWS::ApiGateway::Method'
    Properties:
      RestApiId: !Ref ZoomWebhookApiGateway
      ResourceId: !Ref ZoomWebhookApiResource
      HttpMethod: POST
      AuthorizationType: CUSTOM
      AuthorizerId: !Ref ZoomWebhookApiAuthorizer
      MethodResponses:
        - StatusCode: 200
        - StatusCode: 400
        - StatusCode: 401
        - StatusCode: 403
        - StatusCode: 500
      Integration:
        Type: HTTP
        IntegrationHttpMethod: POST
        Uri: 
          !Join
          - ''
          - - !Ref ParamSplunkHECURL
            - ':'
            - !Ref ParamSplunkHECPort
            - '/services/collector/event'
        RequestParameters:
          integration.request.header.Authorization: 
            !Join
            - ""
            - - "'Splunk "
              - !Ref ParamSplunkHECToken
              - "'"
        PassthroughBehavior: NEVER
        RequestTemplates:
          application/json:
            !Join
            - ""
            - - "#set($event = $input.path('$')['event'])\n"
              - "#set($prefix = 'aws:api:gw:zoom:')\n"
              - "{\n"
              - "    \"event\": $input.json('$'),\n"
              - "    \"host\": \"$context.identity.sourceIp\",\n"
              - "    \"source\": \"$prefix$event\",\n"
              - "    \"time\": \"$context.requestTimeEpoch\",\n"
              - "    \"index\": "
              - "\""
              - !Ref ParamSplunkIndex
              - "\",\n"
              - "    \"sourcetype\": \"zoom:webhook\"\n"
              - "}"
        IntegrationResponses:
          - StatusCode: 200
            SelectionPattern: 200
          - StatusCode: 400
            SelectionPattern: 400
          - StatusCode: 401
            SelectionPattern: 401
          - StatusCode: 403
            SelectionPattern: 403
          - StatusCode: 500
            SelectionPattern: 500
  ZoomWebhookApiAuthorizer:
    Type: 'AWS::ApiGateway::Authorizer'
    Properties: 
      IdentitySource: method.request.header.Authorization
      Name: Zoom-Webhook-Authorizer
      RestApiId: !Ref ZoomWebhookApiGateway
      Type: TOKEN
      # IdentityValidationExpression: !Ref ParamZoomSignature
      AuthorizerUri: !Sub arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${ZoomWebhookLambdaAuthorizer.Arn}/invocations
  ZoomWebhookApiInvokeAuthorizer:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: lambda:InvokeFunction
      FunctionName: !GetAtt ZoomWebhookLambdaAuthorizer.Arn
      Principal: apigateway.amazonaws.com
      SourceArn: !Sub arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ZoomWebhookApiGateway}/*/*
  ZoomWebhookLambdaAuthorizer:
    Type: 'AWS::Serverless::Function'
    Properties:
      Handler: authorizer.handler
      Runtime: nodejs12.x
      CodeUri: s3://zoom-webhook-splunk-hec/function-passthrough.zip
      Description: ''
      MemorySize: 128
      Timeout: 3
      FunctionName: !Sub ${AWS::StackName}-Auth
      Role: !GetAtt ZoomWebhookAuthorizerIAMRole.Arn
  ZoomWebhookAuthorizerIAMRole:
    Type: 'AWS::IAM::Role'
    Properties: 
      AssumeRolePolicyDocument: 
        Version: '2012-10-17'
        Statement: 
        - Effect: Allow
          Principal: 
            Service: 
            - lambda.amazonaws.com
          Action: 
          - sts:AssumeRole
      Policies:  
      - PolicyName: !Sub ${AWS::StackName}-logs
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
            Resource:
            - !Sub arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/${AWS::StackName}-Auth:*
      - PolicyName: !Sub ${AWS::StackName}-kms
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Effect: Allow
            Action:
            - kms:Decrypt
            Resource:
            - !Sub arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/alias/aws/ssm
          - Effect: Allow
            Action: 
            - ssm:GetParameter
            Resource:
            - !Sub arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/zoom/*
  ZoomSignature:
    Type: 'AWS::SSM::Parameter'
    Properties:
      Name: /zoom/signature
      Type: String
      Value: !Ref ParamZoomSignature
Outputs:
  ApiUrl:
    Value:
      !Join
      - ''
      - - 'https://'
        - !Ref ZoomWebhookApiGateway
        - '.execute-api.'
        - !Sub ${AWS::Region}
        - '.amazonaws.com/Prod/zoom-to-hec'
